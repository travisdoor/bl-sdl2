SDL_INIT_TIMER               : u32 : 0x00000001;
SDL_INIT_AUDIO 	             : u32 : 0x00000010;
SDL_INIT_VIDEO 	             : u32 : 0x00000020;
SDL_INIT_JOYSTICK            : u32 : 0x00000200;
SDL_INIT_HAPTIC              : u32 : 0x00001000;
SDL_INIT_GAMECONTROLLER      : u32 : 0x00002000;
SDL_INIT_EVENTS              : u32 : 0x00004000;
SDL_INIT_NOPARACHUTE         : u32 : 0x00100000;
SDL_INIT_EVERYTHING          : u32 : SDL_INIT_TIMER | SDL_INIT_AUDIO | SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_HAPTIC | SDL_INIT_GAMECONTROLLER | SDL_INIT_EVENTS;
SDL_WINDOW_FULLSCREEN        : u32 : 0x00000001;
SDL_WINDOW_OPENGL            : u32 : 0x00000002;
SDL_WINDOW_SHOWN             : u32 : 0x00000004;
SDL_WINDOW_HIDDEN            : u32 : 0x00000008;
SDL_WINDOW_BORDERLESS        : u32 : 0x00000010;
SDL_WINDOW_RESIZABLE         : u32 : 0x00000020;
SDL_WINDOW_MINIMIZED         : u32 : 0x00000040;
SDL_WINDOW_MAXIMIZED         : u32 : 0x00000080;
SDL_WINDOW_INPUTGRABBED      : u32 : 0x00000100;
SDL_WINDOW_INPUTFOCUS        : u32 : 0x00000200;
SDL_WINDOW_MOUSEFOCUS        : u32 : 0x00000400;
SDL_WINDOW_FULLSCREENDESKTOP : u32 : SDL_WINDOW_FULLSCREEN | 0x00001000;
SDL_WINDOW_FOREIGN           : u32 : 0x00000800;
SDL_WINDOW_ALLOWHIGHDPI      : u32 : 0x00002000;
SDL_WINDOW_MOUSECAPTURE      : u32 : 0x00004000;
SDL_WINDOW_ALWAYSONTOP       : u32 : 0x00008000;
SDL_WINDOW_SKIPTASKBAR       : u32 : 0x00010000;
SDL_WINDOW_UTILITY           : u32 : 0x00020000;
SDL_WINDOW_TOOLTIP           : u32 : 0x00040000;
SDL_WINDOW_POPUPMENU         : u32 : 0x00080000;
SDL_WINDOW_VULKAN            : u32 : 0x10000000;
SDL_RENDERER_SOFTWARE        : u32 : 0x00000001;
SDL_RENDERER_ACCELERATED     : u32 : 0x00000002;
SDL_RENDERER_PRESENTVSYNC    : u32 : 0x00000004;
SDL_RENDERER_TARGETTEXTURE   : u32 : 0x00000008;
SDL_FLIP_NONE                : u32 : 0x00000000;
SDL_FLIP_HORIZONTAL          : u32 : 0x00000001;
SDL_FLIP_VERTICAL            : u32 : 0x00000002;

SDL_EventType :: enum u32 {
    FIRSTEVENT                :: 0;    
    QUIT                      :: 0x100; 
    APP_TERMINATING;
    APP_LOWMEMORY;
    APP_WILLENTERBACKGROUND; 
    APP_DIDENTERBACKGROUND; 
    APP_WILLENTERFOREGROUND; 
    APP_DIDENTERFOREGROUND; 
    DISPLAYEVENT              :: 0x150;
    WINDOWEVENT               :: 0x200;
    SYSWMEVENT;                       
    KEYDOWN                   :: 0x300;
    KEYUP;               
    TEXTEDITING;          
    TEXTINPUT;             
    KEYMAPCHANGED;          
    MOUSEMOTION               :: 0x400;
    MOUSEBUTTONDOWN;       
    MOUSEBUTTONUP;         
    MOUSEWHEEL;             
    JOYAXISMOTION             :: 0x600; 
    JOYBALLMOTION;     
    JOYHATMOTION;       
    JOYBUTTONDOWN;       
    JOYBUTTONUP;          
    JOYDEVICEADDED;        
    JOYDEVICEREMOVED;       
    CONTROLLERAXISMOTION      :: 0x650; 
    CONTROLLERBUTTONDOWN; 
    CONTROLLERBUTTONUP;    
    CONTROLLERDEVICEADDED;  
    CONTROLLERDEVICEREMOVED; 
    CONTROLLERDEVICEREMAPPED;
    FINGERDOWN                :: 0x700;
    FINGERUP;
    FINGERMOTION;
    DOLLARGESTURE             :: 0x800;
    DOLLARRECORD;
    MULTIGESTURE;
    CLIPBOARDUPDATE           :: 0x900; 
    DROPFILE                  :: 0x1000; 
    DROPTEXT;                     
    DROPBEGIN;                    
    DROPCOMPLETE;                 
    AUDIODEVICEADDED          :: 0x1100; 
    AUDIODEVICEREMOVED;       
    SENSORUPDATE              :: 0x1200;
    RENDER_TARGETS_RESET      :: 0x2000; 
    RENDER_DEVICE_RESET;      
    USEREVENT                 :: 0x8000;
    SDL_LASTEVENT             :: 0xFFFF
};

SDL_Scancode :: enum {
    UNKNOWN :: 0;
    A :: 4;
    B :: 5;
    C :: 6;
    D :: 7;
    E :: 8;
    F :: 9;
    G :: 10;
    H :: 11;
    I :: 12;
    J :: 13;
    K :: 14;
    L :: 15;
    M :: 16;
    N :: 17;
    O :: 18;
    P :: 19;
    Q :: 20;
    R :: 21;
    S :: 22;
    T :: 23;
    U :: 24;
    V :: 25;
    W :: 26;
    X :: 27;
    Y :: 28;
    Z :: 29;
    ONE :: 30;
    TWO :: 31;
    THREE :: 32;
    FOUR :: 33;
    FIVE :: 34;
    SIX :: 35;
    SEVEN :: 36;
    EIGHT :: 37;
    NINE :: 38;
    ZERO :: 39;
    RETURN :: 40;
    ESCAPE :: 41;
    BACKSPACE :: 42;
    TAB :: 43;
    SPACE :: 44;
    MINUS :: 45;
    EQUALS :: 46;
    LEFTBRACKET :: 47;
    RIGHTBRACKET :: 48;
    BACKSLASH :: 49;
    NONUSHASH :: 50;
    SEMICOLON :: 51;
    APOSTROPHE :: 52;
    GRAVE :: 53; 
    COMMA :: 54;
    PERIOD :: 55;
    SLASH :: 56;
    CAPSLOCK :: 57;
    F1 :: 58;
    F2 :: 59;
    F3 :: 60;
    F4 :: 61;
    F5 :: 62;
    F6 :: 63;
    F7 :: 64;
    F8 :: 65;
    F9 :: 66;
    F10 :: 67;
    F11 :: 68;
    F12 :: 69;
    PRINTSCREEN :: 70;
    SCROLLLOCK :: 71;
    PAUSE :: 72;
    INSERT :: 73;
    HOME :: 74;
    PAGEUP :: 75;
    DELETE :: 76;
    END :: 77;
    PAGEDOWN :: 78;
    RIGHT :: 79;
    LEFT :: 80;
    DOWN :: 81;
    UP :: 82;
    NUMLOCKCLEAR :: 83;
    KP_DIVIDE :: 84;
    KP_MULTIPLY :: 85;
    KP_MINUS :: 86;
    KP_PLUS :: 87;
    KP_ENTER :: 88;
    KP_1 :: 89;
    KP_2 :: 90;
    KP_3 :: 91;
    KP_4 :: 92;
    KP_5 :: 93;
    KP_6 :: 94;
    KP_7 :: 95;
    KP_8 :: 96;
    KP_9 :: 97;
    KP_0 :: 98;
    KP_PERIOD :: 99;
    NONUSBACKSLASH :: 100; 
    APPLICATION :: 101; 
    POWER :: 102; 
    KP_EQUALS :: 103;
    F13 :: 104;
    F14 :: 105;
    F15 :: 106;
    F16 :: 107;
    F17 :: 108;
    F18 :: 109;
    F19 :: 110;
    F20 :: 111;
    F21 :: 112;
    F22 :: 113;
    F23 :: 114;
    F24 :: 115;
    EXECUTE :: 116;
    HELP :: 117;
    MENU :: 118;
    SELECT :: 119;
    STOP :: 120;
    AGAIN :: 121;   
    UNDO :: 122;
    CUT :: 123;
    COPY :: 124;
    PASTE :: 125;
    FIND :: 126;
    MUTE :: 127;
    VOLUMEUP :: 128;
    VOLUMEDOWN :: 129;
    KP_COMMA :: 133;
    KP_EQUALSAS400 :: 134;
    INTERNATIONAL1 :: 135;
    INTERNATIONAL2 :: 136;
    INTERNATIONAL3 :: 137;
    INTERNATIONAL4 :: 138;
    INTERNATIONAL5 :: 139;
    INTERNATIONAL6 :: 140;
    INTERNATIONAL7 :: 141;
    INTERNATIONAL8 :: 142;
    INTERNATIONAL9 :: 143;
    LANG1 :: 144; 
    LANG2 :: 145;
    LANG3 :: 146;
    LANG4 :: 147;
    LANG5 :: 148;
    LANG6 :: 149;
    LANG7 :: 150; 
    LANG8 :: 151;
    LANG9 :: 152;
    ALTERASE :: 153;
    SYSREQ :: 154;
    CANCEL :: 155;
    CLEAR :: 156;
    PRIOR :: 157;
    RETURN2 :: 158;
    SEPARATOR :: 159;
    OUT :: 160;
    OPER :: 161;
    CLEARAGAIN :: 162;
    CRSEL :: 163;
    EXSEL :: 164;
    KP_00 :: 176;
    KP_000 :: 177;
    THOUSANDSSEPARATOR :: 178;
    DECIMALSEPARATOR :: 179;
    CURRENCYUNIT :: 180;
    CURRENCYSUBUNIT :: 181;
    KP_LEFTPAREN :: 182;
    KP_RIGHTPAREN :: 183;
    KP_LEFTBRACE :: 184;
    KP_RIGHTBRACE :: 185;
    KP_TAB :: 186;
    KP_BACKSPACE :: 187;
    KP_A :: 188;
    KP_B :: 189;
    KP_C :: 190;
    KP_D :: 191;
    KP_E :: 192;
    KP_F :: 193;
    KP_XOR :: 194;
    KP_POWER :: 195;
    KP_PERCENT :: 196;
    KP_LESS :: 197;
    KP_GREATER :: 198;
    KP_AMPERSAND :: 199;
    KP_DBLAMPERSAND :: 200;
    KP_VERTICALBAR :: 201;
    KP_DBLVERTICALBAR :: 202;
    KP_COLON :: 203;
    KP_HASH :: 204;
    KP_SPACE :: 205;
    KP_AT :: 206;
    KP_EXCLAM :: 207;
    KP_MEMSTORE :: 208;
    KP_MEMRECALL :: 209;
    KP_MEMCLEAR :: 210;
    KP_MEMADD :: 211;
    KP_MEMSUBTRACT :: 212;
    KP_MEMMULTIPLY :: 213;
    KP_MEMDIVIDE :: 214;
    KP_PLUSMINUS :: 215;
    KP_CLEAR :: 216;
    KP_CLEARENTRY :: 217;
    KP_BINARY :: 218;
    KP_OCTAL :: 219;
    KP_DECIMAL :: 220;
    KP_HEXADECIMAL :: 221;
    LCTRL :: 224;
    LSHIFT :: 225;
    LALT :: 226; 
    LGUI :: 227;
    RCTRL :: 228;
    RSHIFT :: 229;
    RALT :: 230;
    RGUI :: 231;
    MODE :: 257;
    AUDIONEXT :: 258;
    AUDIOPREV :: 259;
    AUDIOSTOP :: 260;
    AUDIOPLAY :: 261;
    AUDIOMUTE :: 262;
    MEDIASELECT :: 263;
    WWW :: 264;
    MAIL :: 265;
    CALCULATOR :: 266;
    COMPUTER :: 267;
    AC_SEARCH :: 268;
    AC_HOME :: 269;
    AC_BACK :: 270;
    AC_FORWARD :: 271;
    AC_STOP :: 272;
    AC_REFRESH :: 273;
    AC_BOOKMARKS :: 274;
    BRIGHTNESSDOWN :: 275;
    BRIGHTNESSUP :: 276;
    DISPLAYSWITCH :: 277; 
    KBDILLUMTOGGLE :: 278;
    KBDILLUMDOWN :: 279;
    KBDILLUMUP :: 280;
    EJECT :: 281;
    SLEEP :: 282;
    APP1 :: 283;
    APP2 :: 284;
    AUDIOREWIND :: 285;
    AUDIOFASTFORWARD :: 286;
    SDL_NUM_SCANCODES :: 512
};

SDL_Window   :: u8;
SDL_Renderer :: u8;
SDL_Texture  :: u8;

SDL_Surface :: struct {
    flags:      s32;
    format:    *u8;
    w:          s32;
    h:          s32;
    pitch:      s32;
    pixels:    *u8;
    userdata:  *u8;
    locked:     s32;
    lock_data: *u8;
    clip_rect:  SDL_Rect;
    map:       *u8;
    refcount:   s32
};

SDL_Rect :: struct {
    x: s32;
    y: s32;
    w: s32;
    h: s32
};

SDL_Point :: struct {
    x: s32;
    y: s32
};

SDL_Event :: struct {
    type: SDL_EventType;
    _padding: [52]u8
};

SDL_KeyboardEvent :: struct {
    type: SDL_EventType;
    timestamp: u32;
    windowID: u32;
    state: u8;
    repeat: u8;
    padding2: u8;
    padding3: u8;
    keysym: SDL_Scancode
};

SDL_Init                     :: fn (flags: u32) s32 #extern;
SDL_Quit                     :: fn () #extern;
SDL_CreateWindow             :: fn (name: *u8, x: s32, y: s32, w: s32, h: s32, flags: u32) *SDL_Window #extern;
SDL_DestroyWindow            :: fn (window: *SDL_Window) #extern;
SDL_Delay                    :: fn (ms: u32) #extern;
SDL_PollEvent                :: fn (event: *SDL_Event) s32 #extern;
SDL_CreateRenderer           :: fn (window: *SDL_Window, index: s32, flags: u32) *SDL_Renderer #extern;
SDL_DestroyRenderer          :: fn (renderer: *SDL_Renderer) #extern;
SDL_CreateTextureFromSurface :: fn (renderer: *SDL_Renderer, surface: *SDL_Surface) *SDL_Texture #extern;
SDL_DestroyTexture           :: fn (texture: *SDL_Texture) #extern;
SDL_RenderPresent	     :: fn (renderer: *SDL_Renderer) #extern;
SDL_SetRenderDrawColor	     :: fn (renderer: *SDL_Renderer, r: u8, g: u8, b: u8, a: u8) s32 #extern;
SDL_RenderClear 	     :: fn (renderer: *SDL_Renderer) s32 #extern;
SDL_RenderCopy		     :: fn (renderer: *SDL_Renderer, texture: *SDL_Texture, srcrect: *SDL_Rect, dstrect: *SDL_Rect) s32 #extern;
SDL_RenderCopyEx	     :: fn (renderer: *SDL_Renderer, texture: *SDL_Texture, srcrect: *SDL_Rect, dstrect: *SDL_Rect, angle: f64, center: *SDL_Point, flip: u32) s32 #extern;
SDL_FreeSurface              :: fn (surface: *SDL_Surface) #extern;
SDL_GetKeyboardState 	     :: fn (numkeys: *s32) *u8 #extern;
SDL_GetTicks 		     :: fn () u32 #extern;
SDL_GetError 		     :: fn () *u8 #extern;
SDL_QueryTexture             :: fn (texture: *SDL_Texture, format: *u32, access: *s32, w: *s32, h: *s32) #extern;
SDL_RenderFillRect           :: fn (renderer: *SDL_Renderer, rect: *SDL_Rect) s32 #extern;


SDL_KeyPressed :: fn (scancode: SDL_Scancode) bool {
    tmp := SDL_GetKeyboardState(null);
    if tmp == null {
        return false;
    }
    
    tmp = cast(*u8) ((cast(u64) tmp) + (cast(u64) scancode));
    return ^tmp > 0;
};
